networks:
  internet:
  local:
    name: swarm-${ENV}-aircaptain-local-internal
    attachable: true # So that we can attach to the database for deployment.
    driver: overlay
    internal: true
  public:
    name: tyr-proxy-internal
    driver: overlay
    external: true
  infra:
    name: tyr-infrastructure-internal
    driver: overlay
    external: true
  admin:
    name: tyr-administration-internal
    driver: overlay
    external: true

secrets:
  tyr_prod_postgres_password:
    external: true
  tyr_dev_postgres_password:
    external: true
  tyr_prod_aircaptain:
    external: true
  tyr_dev_aircaptain:
    external: true
  tyr_prod_dp:
    external: true
  tyr_dev_dp:
    external: true

services:
  postgres:
    image: postgres:17
    user: 2000:2000
    volumes:
      - /data/${VOLUME_ROOT}/postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}
    restart: unless-stopped
    secrets:
      - tyr_${ENV}_postgres_password
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/tyr_${ENV}_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local
      #- admin    # Disabled in production until needed.
      #- internet # Needed for development env to expose ports to host.
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 70m
      placement:
        constraints:
          - ${SWARM_INFRA_CONSTRAINT}

  cache:
    image: valkey/valkey
    user: 2000:2000
    command: valkey-server --save 60 1 --dir /data
    volumes:
      - /data/${VOLUME_ROOT}/cache
    restart: unless-stopped
    ports:
      - ${CACHE_PORT}
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local
      #- admin    # Disabled in production until needed.
      #- internet # Needed for development env to expose ports to host.
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 20m
      placement:
        constraints:
          - ${SWARM_INFRA_CONSTRAINT}

  api:
    image: ghcr.io/ewancoder-tyr/aircaptain-api:${API_TAG}
    restart: unless-stopped
    secrets:
      - source: tyr_${ENV}_aircaptain
        target: secrets.env
      - source: tyr_${ENV}_dp
        target: dp.pfx
    environment:
      - HEALTHCHECK_URI=http://localhost:8080/health
    networks:
      - local
      - public
      - infra
    deploy:
      endpoint_mode: dnsrr
      replicas: ${API_REPLICAS}
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 70m
      placement:
        constraints:
          - ${SWARM_SERVICE_CONSTRAINT}

  web:
    image: ghcr.io/ewancoder-tyr/aircaptain-web:${WEB_TAG}
    restart: unless-stopped
    networks:
      - public
    deploy:
      endpoint_mode: dnsrr
      replicas: ${WEB_REPLICAS}
      resources:
        limits:
          memory: 100m
        reservations:
          memory: 20m
      placement:
        constraints:
          - ${SWARM_SERVICE_CONSTRAINT}
