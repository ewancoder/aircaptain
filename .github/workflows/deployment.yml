name: Deploy to environment

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      badge_gist_id:
        required: true
        type: string
      db_changed:
        required: false
        type: string
      api_sha_tag:
        required: false
        type: string
      web_sha_tag:
        required: false
        type: string
    secrets:
      ssh_host:
        required: true
      ssh_port:
        required: true
      ssh_username:
        required: true
      ssh_key:
        required: true
      ssh_key_passphrase:
        required: true
      gist_secret:
        required: true
jobs:
  deploy-production:
    name: Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-'))
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.ssh_host }}
          port: ${{ secrets.ssh_port }}
          username: ${{ secrets.ssh_username }}
          key: ${{ secrets.ssh_key }}
          passphrase: ${{ secrets.ssh_key_passphrase }}
          source: "db,docker-compose.yml,swarm-compose.yml,.env.prod"
          target: /tmp/${{ inputs.project_name }}_prod

      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.2.2
        env:
          PROJECT_NAME: ${{ inputs.project_name }}
          DB_CHANGED: ${{ inputs.db_changed }}
          API_SHA_TAG: ${{ inputs.api_sha_tag }}
          WEB_SHA_TAG: ${{ inputs.web_sha_tag }}
          DEPLOYMENT_ENVIRONMENT: prod
          DEPLOYMENT_IS_PRODUCTION: true
          IS_SWARM: true # Change to false to switch to non-swarm mode.
        with:
          host: ${{ secrets.ssh_host }}
          port: ${{ secrets.ssh_port }}
          username: ${{ secrets.ssh_username }}
          key: ${{ secrets.ssh_key }}
          passphrase: ${{ secrets.ssh_key_passphrase }}
          envs: DB_CHANGED,API_SHA_TAG,WEB_SHA_TAG,PROJECT_NAME,DEPLOYMENT_ENVIRONMENT,DEPLOYMENT_IS_PRODUCTION,IS_SWARM
          script_path: .github/scripts/deploy.sh

      - name: Get current time
        run: |
          echo "now=$(date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Upload DB deployment info to gist
        if: ${{ inputs.db_changed != '' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_secret }}
          gistID: ${{ inputs.badge_gist_id }}
          filename: ${{ inputs.project_name }}-db-deploy-prod.json
          label: DB deployed
          message: "${{ github.ref_name }}-${{ env.short_sha }}, ${{ env.now }} utc"
          color: "#48fa60"

      - name: Upload API deployment info to gist
        if: ${{ inputs.api_sha_tag != '' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_secret }}
          gistID: ${{ inputs.badge_gist_id }}
          filename: ${{ inputs.project_name }}-api-deploy-prod.json
          label: API deployed
          message: "${{ github.ref_name }}-${{ env.short_sha }}, ${{ env.now }} utc"
          color: "#48fa60"

      - name: Upload Web deployment info to gist
        if: ${{ inputs.web_sha_tag != '' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_secret }}
          gistID: ${{ inputs.badge_gist_id }}
          filename: ${{ inputs.project_name }}-web-deploy-prod.json
          label: Web deployed
          message: "${{ github.ref_name }}-${{ env.short_sha }}, ${{ env.now }} utc"
          color: "#48fa60"

  deploy-development:
    name: Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.ssh_host }}
          port: ${{ secrets.ssh_port }}
          username: ${{ secrets.ssh_username }}
          key: ${{ secrets.ssh_key }}
          passphrase: ${{ secrets.ssh_key_passphrase }}
          source: "db,docker-compose.yml,swarm-compose.yml,.env.dev"
          target: /tmp/${{ inputs.project_name }}_dev

      - name: Deploy to Development
        uses: appleboy/ssh-action@v1.2.2
        env:
          PROJECT_NAME: ${{ inputs.project_name }}
          DB_CHANGED: ${{ inputs.db_changed }}
          API_SHA_TAG: ${{ inputs.api_sha_tag }}
          WEB_SHA_TAG: ${{ inputs.web_sha_tag }}
          DEPLOYMENT_ENVIRONMENT: dev
          DEPLOYMENT_IS_PRODUCTION: false
          IS_SWARM: true # Change to false to switch to non-swarm mode.
        with:
          host: ${{ secrets.ssh_host }}
          port: ${{ secrets.ssh_port }}
          username: ${{ secrets.ssh_username }}
          key: ${{ secrets.ssh_key }}
          passphrase: ${{ secrets.ssh_key_passphrase }}
          envs: DB_CHANGED,API_SHA_TAG,WEB_SHA_TAG,PROJECT_NAME,DEPLOYMENT_ENVIRONMENT,DEPLOYMENT_IS_PRODUCTION,IS_SWARM
          script_path: .github/scripts/deploy.sh

      - name: Get current time
        run: |
          echo "now=$(date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Upload DB deployment info to gist
        if: ${{ inputs.db_changed != '' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_secret }}
          gistID: ${{ inputs.badge_gist_id }}
          filename: ${{ inputs.project_name }}-db-deploy-dev.json
          label: DB deployed
          message: "${{ github.ref_name }}-${{ env.short_sha }}, ${{ env.now }} utc"
          color: "#48fa60"

      - name: Upload API deployment info to gist
        if: ${{ inputs.api_sha_tag != '' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_secret }}
          gistID: ${{ inputs.badge_gist_id }}
          filename: ${{ inputs.project_name }}-api-deploy-dev.json
          label: API deployed
          message: "${{ github.ref_name }}-${{ env.short_sha }}, ${{ env.now }} utc"
          color: "#48fa60"

      - name: Upload Web deployment info to gist
        if: ${{ inputs.web_sha_tag != '' }}
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_secret }}
          gistID: ${{ inputs.badge_gist_id }}
          filename: ${{ inputs.project_name }}-web-deploy-dev.json
          label: Web deployed
          message: "${{ github.ref_name }}-${{ env.short_sha }}, ${{ env.now }} utc"
          color: "#48fa60"
